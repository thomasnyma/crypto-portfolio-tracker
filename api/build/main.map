{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/environment/environment.js","webpack:///./src/index.js","webpack:///./src/nomicsConnector.js","webpack:///external \"axios\"","webpack:///external \"cron\"","webpack:///external \"firebase-admin\"","webpack:///external \"graphql-yoga\"","webpack:///external \"memoizee\""],"names":["environment","production","nomicsApiKey","serviceAccountKey","typeDefs","resolvers","Query","getCoinInfo","root","variables","context","nomics","currency","server","GraphQLServer","NomicsConnector","admin","initializeApp","credential","cert","db","firestore","updateCoins","allCoins","getTopCoins","topCoins","slice","forEach","element","collection","doc","id","set","console","log","start","constructor","apiKey","client","axios","create","baseURL","method","responseType","params","key","res","ids","data","getAllCoins","attributes","sort"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const environment = {\r\n    production: false,\r\n    nomicsApiKey: '656168ea65bbcbbd4b425c89446b2ed7',\r\n    serviceAccountKey: {\r\n        \"type\": \"service_account\",\r\n        \"project_id\": \"crypto-portfolio-tracker-app\",\r\n        \"private_key_id\": \"eb4e325d2baded41d07381a54fa7e9be9f6ebd3e\",\r\n        \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCJtLDynEd0zXhf\\nmXsmNYr+qb0l8c3XfHxN+txvXJm5X8yQy7oFAGcKLFE+/JIH8ocEL72fofd6QCM0\\nGxsCzkIW4LnuWfkb0n0xWb72HMiA999dQmMlWrWMRuURAR5OsQwWaobTOi4iJQMh\\nONO/Lln91BFQloRnV2oZsKzotABX6WYnhD9bkyW8ryKXEUl1d6OPRAeY5IZW0MRV\\nwekEqYBut6xuq/JUeLjoyLztSAcrtUBAAKsr6yq+szIZd+Vx56GWzjrWPW2ncaJ3\\nTg6vWhBhrbanqNalxnFXyXdL3t0+Px4fognz8W1QodtjVeUkB3sg/SnX0fHvQlHM\\nyIaTZAuvAgMBAAECggEAJ9GSawzqkqlJWedxFzrbTsk5MwwpF9rcvNXBwQfXQaWk\\naugmCYU0xlnLQnnZJigoh3rgi5TTkUuTgmEmHdkTfjcMPJJSuItUfR003Ui0Z6qF\\nMZvdPHNu1Lm5SgH3SAzk8GRsSQ7lQSVPst8SR5F5Hy8ftJxZe+JogTY3wXAvOzwL\\nItMlLCEV5a8f41xrPT+ISJ+zhy+WPJ3ymHvoLeRow6stocRI02WFKay6mZVRInxs\\nNJ4+deSKBgSvCeTegmchYYxB7p/rPsV68/brTFFUc1UiMH9P0OOQEpW0/6IxUGiO\\nG77ATS24h0oi4s/8fwJekKvpulD0gkI+ok0sb5abuQKBgQC8M4jFORVWRrCHm3hH\\nTfUu0pfSQM9eT/o5a8XTXLnzf/kd+hrDVvuH/JkhoCJ04ws2tL7xtHHZ72HcMQHO\\ndHC7l4S/zViLRMmQZ+B5OSAWoBNK0wU2L+1mw/9Q7hpzmjNST9nLCBUhPN6sWO9R\\nc6Y4ZqNQQtw5OUG9kkMonT+zSQKBgQC7UFGHV7uzclVWkvQqO6CdOJOKAzKziXI3\\nULMNqw/VqdDq8Bfre9+YgYxgClptwHJYJs4uljoTMe+9azVNcoz+v/SeO9TROEM7\\nAaTbzl0IxqQQ9h05BSiMYBgaCqT/m7Z+fVG0am6B+jw1GZ0Iph8q3uZIZ9Z1JLX6\\nSZzsXllPNwKBgQCFq8S07/prsQGpD4+6dXBztTgIKegfgIalShrUKMQaYwa5d+6S\\nV7GHwK2y6F4Qz0IjtPT6D8PdmtzS3CwAS0vWsaOj52HAaTcQzfbtotlbuI57Uq4c\\n8qWXnBY3kSZQfXF+QSDbx/3aAbXWi8RPAelJnfzZAOQR8Mz0rHHu4uFfoQKBgEwI\\nPC+90vjyDeXIXMfP0FBBKNI6nhf2UKBXZ3bC2viVp7HVpz/01jvnSf2p9i7akQ9r\\nIQIUBJrKCFBQ9h/rwYOek0KvcqFCPzfyYOLAD0+CohIodJAyodTpJJ9ddsAyio8p\\ne0LKePTViB7duLpMBBa4x6zYSVrffeaMfuALJCFdAoGAIE1kFBQCVoot+Rjw0JWC\\ndPtlTGU0owbymCIB6WjUUMv1WShgKjIT9XUJsjk5JPQsfH+UAPMxLCsHA5Ith5/J\\n6ea4zj03jePF7QM3hA6jkHEee1gY78hw5vy/09CcAm77sy3XEY5MCcURnWrrMb/P\\np407zD//EJ8c7X687jJ/F9Y=\\n-----END PRIVATE KEY-----\\n\",\r\n        \"client_email\": \"firebase-adminsdk-gh1d3@crypto-portfolio-tracker-app.iam.gserviceaccount.com\",\r\n        \"client_id\": \"113411591332208029990\",\r\n        \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\r\n        \"token_uri\": \"https://oauth2.googleapis.com/token\",\r\n        \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\r\n        \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-gh1d3%40crypto-portfolio-tracker-app.iam.gserviceaccount.com\"\r\n    }\r\n  };","import { GraphQLServer } from 'graphql-yoga';\r\nimport { CronJob } from 'cron';\r\nimport admin from 'firebase-admin';\r\nimport { environment } from './environment/environment';\r\nimport NomicsConnector from './nomicsConnector';\r\n\r\nconst typeDefs = `\r\n  type Coin {\r\n    currency: String\r\n    id: String\r\n    status: String\r\n    price: String\r\n    price_date: String\r\n    price_timestamp: String\r\n    symbol: String\r\n    circulating_supply: String\r\n    max_supply: String\r\n    name: String\r\n    logo_url: String\r\n    market_cap: String\r\n    market_cap_dominance: String\r\n    transparent_market_cap: String\r\n    num_exchanges: String\r\n    num_pairs: String\r\n    num_pairs_unmapped: String\r\n    first_candle: String\r\n    first_trade: String\r\n    first_order_book: String\r\n    first_priced_at: String\r\n    rank: String\r\n    rank_delta: String\r\n    high: String\r\n    high_timestamp: String\r\n  }\r\n\r\n  type Query {\r\n\t  getCoinInfo(currency: String!): [Coin]\r\n  }\r\n`;\r\n\r\nconst resolvers = {\r\n\tQuery: {\r\n\t\tgetCoinInfo: (root, variables, context) =>\r\n\t\t\tcontext.nomics.getCoinInfo(variables.currency),\r\n\t},\r\n};\r\n\r\nconst server = new GraphQLServer({\r\n\ttypeDefs,\r\n\tresolvers,\r\n\tcontext: {\r\n\t\tnomics: new NomicsConnector(environment.nomicsApiKey),\r\n\t},\r\n});\r\n\r\n// Initialize Firebase\r\nadmin.initializeApp({\r\n  credential: admin.credential.cert(environment.serviceAccountKey),\r\n})\r\nconst db = admin.firestore();\r\n\r\nconst nomics = new NomicsConnector(environment.nomicsApiKey);\r\n\r\nconst updateCoins = async () => {\r\n  const allCoins = await nomics.getTopCoins();\r\n  const topCoins = allCoins.slice(0, 500);\r\n\r\n  topCoins.forEach(async element => {\r\n    await db.collection('coins').doc(element.id).set(element);\r\n  });\r\n  \r\n  return console.log('coins updated!');\r\n};\r\n\r\n// Cron job to update the data every minute\r\n// var job = new CronJob('* * * * *', () => {\r\n//   console.log('Updating data...');\r\n//   updateCoins();\r\n// }, null, true, 'Europe/Copenhagen');\r\n// job.start();\r\n\r\n// Go to http://localhost:4000 to test the API\r\nserver.start(() => console.log('Server running on http://localhost:4000'));\r\n\r\n// updateCoins();","import axios from 'axios';\r\nimport memoize from 'memoizee';\r\n\r\nclass NomicsConnector {\r\n\tconstructor(apiKey) {\r\n\t\tthis.client = axios.create({\r\n\t\t\tbaseURL: 'https://api.nomics.com/v1',\r\n\t\t\tmethod: 'get',\r\n\t\t\tresponseType: 'json',\r\n\t\t\tparams: { key: apiKey },\r\n\t\t});\r\n\r\n\t\t// this.getPricesByCurrencyCached = memoize(this.getPricesByCurrency, {\r\n\t\t// \tmaxAge: 300000, // 5 minutes til cache expiration\r\n\t\t// \tpreFetch: 0.05, // pre-fetch 15s before expiration\r\n\t\t// \tpromise: 'then', // handle async\r\n\t\t// });\r\n\r\n\t\t// this.getCoinInfoCached(currency) = memoize(this.getCoinInfo(currency), {\r\n\t\t// \tmaxAge: 300000, // 5 minutes til cache expiration\r\n\t\t// \tpreFetch: 0.05, // pre-fetch 15s before expiration\r\n\t\t// \tpromise: 'then', // handle async\r\n\t\t// });\r\n\t}\r\n\r\n\t// async getPrices() {\r\n\t// \tconst res = await this.client('/prices');\r\n\t// \treturn res.data;\r\n\t// }\r\n\r\n\t// async getPricesByCurrency() {\r\n\t// \tconst prices = await this.getPrices();\r\n\t// \treturn prices.reduce((pricesByCurrency, { currency, price }) => {\r\n\t// \t\tpricesByCurrency[currency] = price;\r\n\t// \t\treturn pricesByCurrency;\r\n\t// \t}, {});\r\n\t// }\r\n\r\n\tasync getCoinInfo(currency) {\r\n\t\tconst res = await this.client('/currencies/ticker', {\r\n\t\t\tparams: { ids: currency },\r\n\t\t});\r\n\t\treturn res.data;\r\n\t}\r\n\r\n\tasync getAllCoins() {\r\n\t\tconst res = await this.client('/currencies', {\r\n\t\t\tparams: { attributes: 'id,name,logo_url' },\r\n\t\t});\r\n\t\treturn res.data;\r\n\t}\r\n\r\n\tasync getTopCoins() {\r\n\t\tconst res = await this.client('/currencies/ticker', {\r\n\t\t\tparams: { sort: 'rank', attributes: 'id,name,logo_url' },\r\n\t\t});\r\n\t\treturn res.data;\r\n\t}\r\n\r\n\t// async getPrice(currency) {\r\n\t// \tconst pricesByCurrency = await this.getPricesByCurrencyCached();\r\n\t// \treturn pricesByCurrency[currency];\r\n\t// }\r\n}\r\n\r\nexport default NomicsConnector;\r\n","module.exports = require(\"axios\");","module.exports = require(\"cron\");","module.exports = require(\"firebase-admin\");","module.exports = require(\"graphql-yoga\");","module.exports = require(\"memoizee\");"],"sourceRoot":""}